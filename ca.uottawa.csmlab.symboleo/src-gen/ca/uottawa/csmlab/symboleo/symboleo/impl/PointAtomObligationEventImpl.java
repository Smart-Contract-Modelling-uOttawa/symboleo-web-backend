/**
 * generated by Xtext 2.31.0
 */
package ca.uottawa.csmlab.symboleo.symboleo.impl;

import ca.uottawa.csmlab.symboleo.symboleo.Event;
import ca.uottawa.csmlab.symboleo.symboleo.PointAtomObligationEvent;
import ca.uottawa.csmlab.symboleo.symboleo.SymboleoPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Point Atom Obligation Event</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.uottawa.csmlab.symboleo.symboleo.impl.PointAtomObligationEventImpl#getObligationEvent <em>Obligation Event</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PointAtomObligationEventImpl extends PointExpressionImpl implements PointAtomObligationEvent
{
  /**
   * The cached value of the '{@link #getObligationEvent() <em>Obligation Event</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObligationEvent()
   * @generated
   * @ordered
   */
  protected Event obligationEvent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PointAtomObligationEventImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymboleoPackage.Literals.POINT_ATOM_OBLIGATION_EVENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event getObligationEvent()
  {
    return obligationEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObligationEvent(Event newObligationEvent, NotificationChain msgs)
  {
    Event oldObligationEvent = obligationEvent;
    obligationEvent = newObligationEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT, oldObligationEvent, newObligationEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObligationEvent(Event newObligationEvent)
  {
    if (newObligationEvent != obligationEvent)
    {
      NotificationChain msgs = null;
      if (obligationEvent != null)
        msgs = ((InternalEObject)obligationEvent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT, null, msgs);
      if (newObligationEvent != null)
        msgs = ((InternalEObject)newObligationEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT, null, msgs);
      msgs = basicSetObligationEvent(newObligationEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT, newObligationEvent, newObligationEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT:
        return basicSetObligationEvent(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT:
        return getObligationEvent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT:
        setObligationEvent((Event)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT:
        setObligationEvent((Event)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymboleoPackage.POINT_ATOM_OBLIGATION_EVENT__OBLIGATION_EVENT:
        return obligationEvent != null;
    }
    return super.eIsSet(featureID);
  }

} //PointAtomObligationEventImpl
